/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
    
     // Dependencia para ActiveMQ Artemis
    implementation 'org.apache.activemq:artemis-jms-client:2.31.0'  // Reemplaza la versión según la que necesites
    
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'


    // Dependencias para Apache Camel
    implementation 'org.apache.camel:camel-core:3.21.0'  // Reemplaza la versión según la que necesites
    implementation 'org.apache.camel:camel-jms:3.21.0'  // Reemplaza la versión según la que necesites
    implementation 'org.apache.camel:camel-http:3.13.0'  // Reemplaza la versión según la que necesites
    implementation 'com.opencsv:opencsv:5.5.2'
	
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
